## Copy of the config for "sim6502" target, with ONE change.
## If this becomes obsolete, replace it with a fresh copy,
## and re-adjust ZP so the compiler avoids using the first
## half of it (or otherwise keeps out the way of monitor,
## and traditionally "free" spots (those might get used
## by Taki).
##          - micah@addictivecode.org

SYMBOLS {
    __EXEHDR__:    type = import;
    __STACKSIZE__: type = weak, value = $0800; # 2k stack
}
MEMORY {
## ZP allocations adjusted to start at $80 instead of $00. -m
    ZP:     file = "",               start = $0080, size = $0080;
##
    HEADER: file = %O,               start = $0000, size = $000C;
## We want our code to load late - where DOS would normally go. -m
    MAIN:   file = %O, define = yes, start = $2000, size = $B000 - __STACKSIZE__;
##
}
SEGMENTS {
    ZEROPAGE: load = ZP,     type = zp;
    EXEHDR:   load = HEADER, type = ro;
    STARTUP:  load = MAIN,   type = ro;
    LOWCODE:  load = MAIN,   type = ro,  optional = yes;
    ONCE:     load = MAIN,   type = ro,  optional = yes;
    CODE:     load = MAIN,   type = ro;
    RODATA:   load = MAIN,   type = ro;
    DATA:     load = MAIN,   type = rw;
    BSS:      load = MAIN,   type = bss, define   = yes;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
